// Generated by CoffeeScript 1.6.3
(function() {
  MDD.Helpers.event = _.extend({}, Backbone.Events);

  MDD.Helpers.template = function(id) {
    return _.template($('#' + id).html());
  };

  MDD.Helpers.tmpl_render = function(tmpl_name, tmpl_data, that) {
    var tmpl_dir, tmpl_string, tmpl_url,
      _this = this;
    if (!this.tmpl_render.tmpl_cache) {
      this.tmpl_render.tmpl_cache = {};
    }
    if (!this.tmpl_render.tmpl_cache[tmpl_name]) {
      tmpl_dir = 'templates';
      tmpl_url = tmpl_dir + '/' + tmpl_name + '.html';
      tmpl_string = '';
      $.ajax({
        url: tmpl_url,
        method: 'GET',
        async: false,
        success: function(data) {
          return tmpl_string = data;
        }
      });
      this.tmpl_render.tmpl_cache[tmpl_name] = _.template(tmpl_string);
    }
    return this.tmpl_render.tmpl_cache[tmpl_name](tmpl_data);
  };

  _.templateSettings.interpolate = /\{\{(.+?)\}\}/g;

  MDD.Helpers.DoseSetsID = 0;

  /*
  window.log= ->
  	log.history=log.history||[]
  	log.history.push arguments
  	if @console
  		arguments.callee=arguments.callee.caller
  		a=[].slice.call arguments
  		if typeof console.log == "object"
  			log.apply.call(console.log, console, a)
  		else
  			console.log.apply(console, a)
  
  ((b)->
  	c = ->
  
  	for d="assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,timeStamp,profile,profileEnd,time,timeEnd,trace,warn".split(","),a;a=d.pop()
  		b[a]=b[a]||c
  	
  )((->
  	try console.log()
  		window.console
  	catch(err)
  		window.console={})())
  */


  window.log = function() {
    var a;
    log.history = log.history || [];
    log.history.push(arguments_);
    if (this.console) {
      arguments_.callee = arguments_.callee.caller;
      a = [].slice.call(arguments_);
      if (typeof console.log === "object") {
        return log.apply.call(console.log, console, a);
      } else {
        return console.log.apply(console, a);
      }
    }
  };

  (function(b) {
    var a, c, d, _results;
    c = function() {};
    d = "assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,timeStamp,profile,profileEnd,time,timeEnd,trace,warn".split(",");
    a = void 0;
    _results = [];
    while (a = d.pop()) {
      _results.push(b[a] = b[a] || c);
    }
    return _results;
  })((function() {
    var err;
    try {
      console.log();
      return window.console;
    } catch (_error) {
      err = _error;
      return window.console = {};
    }
  })());

}).call(this);
