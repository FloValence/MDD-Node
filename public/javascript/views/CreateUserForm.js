// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'helpers', 'models/User', 'collections/Users'], function($, _, Backbone, Helpers, User, Users) {
    var CreateDoseSetForm, _ref;
    return CreateDoseSetForm = (function(_super) {
      __extends(CreateDoseSetForm, _super);

      function CreateDoseSetForm() {
        _ref = CreateDoseSetForm.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      CreateDoseSetForm.prototype.el = '#createUser';

      CreateDoseSetForm.prototype.initialize = function() {
        this.userName = this.$el.find('.userName');
        return this.userEmail = this.$el.find('.userEmail');
      };

      CreateDoseSetForm.prototype.events = {
        'submit': 'controlFields'
      };

      CreateDoseSetForm.prototype.controlFields = function(e) {
        var email, name, user;
        e.preventDefault();
        if (!($.trim(this.userName.val()) === '')) {
          name = this.userName.val();
        } else {
          alert('Veuillez entrer un nom d\'utilisateur');
          return;
        }
        if (!($.trim(this.userEmail.val()) === '')) {
          email = this.userEmail.val();
        } else {
          alert('Veuillez entrer une adresse mail');
          return;
        }
        user = new User({
          email: email,
          name: name,
          active: true,
          dosesets: ''
        });
        console.log(user);
        return this.collection.create(user);
      };

      return CreateDoseSetForm;

    })(Backbone.View);
  });

}).call(this);
