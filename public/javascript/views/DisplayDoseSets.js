// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'helpers', 'models/Dose', 'models/DoseSet'], function($, _, Backbone, Helpers, Dose, DoseSet) {
    var DisplayDoseSets, _ref;
    return DisplayDoseSets = (function(_super) {
      __extends(DisplayDoseSets, _super);

      function DisplayDoseSets() {
        _ref = DisplayDoseSets.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      DisplayDoseSets.prototype.el = '.shot-list';

      DisplayDoseSets.prototype.initialize = function() {
        Helpers.event.on('DoseSets:renderAll', this.renderAll, this);
        Helpers.event.on('DoseSets:renderOne', this.renderOne, this);
        return Helpers.event.on('DoseSets:renderSome', this.renderSome, this);
      };

      DisplayDoseSets.prototype.renderAll = function() {
        var _this = this;
        if (!this.collection.models[0]) {
          return this.$el.html('<h2>Il n\'y a pas encore de Set, <br> Cr√©ez en un !</h2>');
        } else {
          this.$el.html('<h2>Tous vos Sets : </h2>');
          return _.each(this.collection.models, function(doses) {
            return _.each(doses.get('all').split(','), function(doseid) {
              var dose;
              dose = new Dose({
                _id: doseid
              });
              return dose.fetch({
                success: function() {
                  return _this.$el.append(Helpers.tmpl_render('dose', {
                    'dose': dose.toJSON()
                  }, _this));
                }
              });
            });
          });
        }
      };

      DisplayDoseSets.prototype.renderOne = function(id) {
        var doseSet,
          _this = this;
        doseSet = new DoseSet({
          id: id
        });
        return doseSet.fetch({
          success: function() {
            _this.$el.html('<h2>' + _this.collection.get(id).get('title') + '</h2>');
            return _.each(_this.collection.get(id).get('all').split(','), function(doseid) {
              var dose;
              dose = new Dose({
                _id: doseid
              });
              return dose.fetch({
                success: function() {
                  return _this.$el.append(Helpers.tmpl_render('dose', {
                    'dose': dose.toJSON()
                  }, _this));
                }
              });
            });
          }
        });
      };

      DisplayDoseSets.prototype.renderSome = function(models) {
        var _this = this;
        if (!models[0]) {
          return this.$el.html('<h2>Il n\'y a pas de favoris !</h2>');
        } else {
          this.$el.html('<h2>Vos Sets favoris : </h2>');
          return _.each(models, function(doses) {
            return _.each(doses.get('all').split(','), function(doseid) {
              var dose;
              dose = new Dose({
                _id: doseid
              });
              return dose.fetch({
                success: function() {
                  return _this.$el.append(Helpers.tmpl_render('dose', {
                    'dose': dose.toJSON()
                  }, _this));
                }
              });
            });
          });
        }
      };

      return DisplayDoseSets;

    })(Backbone.View);
  });

}).call(this);
