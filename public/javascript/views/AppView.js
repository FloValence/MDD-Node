// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'helpers', 'collections/Users', 'views/CreateDoseSetForm', 'views/ShowDoseSetForm', 'views/DisplayDoseSets', 'views/CreateUserForm', 'views/showUserDoseSetForm'], function(Backbone, Helpers, Users, CreateDoseSetForm, ShowDoseSetForm, DisplayDoseSets, CreateUserForm, showUserDoseSetForm) {
    var AppView, _ref;
    return AppView = (function(_super) {
      __extends(AppView, _super);

      function AppView() {
        _ref = AppView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      AppView.prototype.initialize = function() {
        var createView, displayView, setNumber, showView, users;
        if (this.collection.length > 0 && Helpers.DoseSetsID === 0) {
          setNumber = this.collection.length - 1;
          Helpers.DoseSetsID = this.collection.models[setNumber].id;
        }
        users = new Users();
        users.fetch().then(function() {
          var createUserView, showUserView;
          createUserView = new CreateUserForm({
            collection: users
          });
          return showUserView = new showUserDoseSetForm({
            users: users,
            dosesets: this.collection
          });
        });
        createView = new CreateDoseSetForm({
          collection: this.collection
        });
        showView = new ShowDoseSetForm({
          collection: this.collection
        });
        return displayView = new DisplayDoseSets({
          collection: this.collection
        });
      };

      return AppView;

    })(Backbone.View);
  });

}).call(this);
